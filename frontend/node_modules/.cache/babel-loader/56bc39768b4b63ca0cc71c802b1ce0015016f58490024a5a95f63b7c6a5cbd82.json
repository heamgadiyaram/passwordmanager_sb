{"ast":null,"code":"var _jsxFileName = \"/Users/heam/Library/Mobile Documents/com~apple~CloudDocs/Heam/UNC/Projects/PasswordManager_sb/frontend/src/components/UserForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isLogin, setIsLogin] = useState(true);\n  const [message, setMessage] = useState(\"\");\n  const checkUserExists = async () => {\n    const response = await fetch(`http://localhost:8080/api/users/${username}`);\n    const exists = await response.json();\n    setMessage(exists ? \"Username exists\" : \"Username available\");\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const response = await fetch(\"http://localhost:8080/api/users/handle\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: new URLSearchParams({\n        username,\n        password,\n        isLogin\n      })\n    });\n    const user = await response.json();\n    setMessage(user ? \"Success!\" : \"Error logging in/registering\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Authentication\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      onBlur: checkUserExists // Trigger GET request\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsLogin(true),\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsLogin(false),\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"GNi6DC4XHnvBa34Ee7EekHLM39U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","username","setUsername","password","setPassword","isLogin","setIsLogin","message","setMessage","checkUserExists","response","fetch","exists","json","handleSubmit","event","preventDefault","method","headers","body","URLSearchParams","user","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onBlur","onClick","_c","$RefreshReg$"],"sources":["/Users/heam/Library/Mobile Documents/com~apple~CloudDocs/Heam/UNC/Projects/PasswordManager_sb/frontend/src/components/UserForm.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst App = () => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [isLogin, setIsLogin] = useState(true);\n    const [message, setMessage] = useState(\"\");\n\n    const checkUserExists = async () => {\n        const response = await fetch(`http://localhost:8080/api/users/${username}`);\n        const exists = await response.json();\n        setMessage(exists ? \"Username exists\" : \"Username available\");\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        const response = await fetch(\"http://localhost:8080/api/users/handle\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n            body: new URLSearchParams({\n                username,\n                password,\n                isLogin\n            }),\n        });\n\n        const user = await response.json();\n        setMessage(user ? \"Success!\" : \"Error logging in/registering\");\n    };\n\n    return (\n        <div>\n            <h1>User Authentication</h1>\n            <input\n                type=\"text\"\n                placeholder=\"Username\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                onBlur={checkUserExists} // Trigger GET request\n            />\n            <input\n                type=\"password\"\n                placeholder=\"Password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n            />\n            <button onClick={() => setIsLogin(true)}>Login</button>\n            <button onClick={() => setIsLogin(false)}>Register</button>\n            <button onClick={handleSubmit}>Submit</button>\n            <p>{message}</p>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}